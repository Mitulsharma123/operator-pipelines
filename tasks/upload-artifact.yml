---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: upload-artifacts
spec:
  params:
    - name: pyxis_api_key_secret
      default: pyxis-api-secret
    - name: pyxis_url
      default: https://catalog.redhat.com/api/containers/
    - name: log_file
    - name: result_file
    - name: artifacts_dir
    - name: preflight_results_exists
      default: "false"
    - name: md5sum
    - name: cert_project_id
    - name: bundle_version
    - name: package_name
  results:
    - name: log_url
    - name: result_url
  workspaces:
    - name: source
  steps:
    - name: upload-test-artifacts-and-logs
      image: quay.io/redhat-isv/operator-pipelines-images:latest
      workingDir: $(workspaces.source.path)
      env:
        - name: PYXIS_API_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.pyxis_api_key_secret)
              key: PYXIS_API_KEY
      script: |
        #! /usr/bin/env bash
        PREFLIGHT_RESULTS_EXISTS="$(params.preflight_results_exists)"
        if [ $PREFLIGHT_RESULTS_EXISTS == "true" ]; then
          echo "Preflight results already exists- skipping"
          echo "none" | tee $(results.log_url.path)
          exit 0
        fi

        echo "Uploading test results and artifacts"

        upload-artifacts \
          --cert-project-id "$(params.cert_project_id)" \
          --operator-version "$(params.bundle_version)" \
          --operator-package-name "$(params.package_name)" \
          --certification-hash "$(params.md5sum)" \
          --pyxis-url "$(params.pyxis_url)" \
          --artifacts-dir "$(params.artifacts_dir)" \
          --log-file "$(params.log_file)" \
          --result-file "$(params.result_file)" \
          --verbose

        cat output.json | jq

        LOG_ID=$(cat output.json | jq -r ".logs._id")
        RESULTS_ID=$(cat output.json| jq -r ".test_results._id")

        LOG_URL="$(params.pyxis_url)v1/projects/certification/id/$(params.cert_project_id)/artifacts/$LOG_ID"
        RESULT_URL="$(params.pyxis_url)v1/projects/certification/id/$(params.cert_project_id)/test-results/$RESULTS_ID"

        echo "Test results URL:"
        echo -n $RESULT_URL | tee $(results.result_url.path)

        echo ""
        echo "Logs URL: "
        echo -n $LOG_URL | tee $(results.log_url.path)
